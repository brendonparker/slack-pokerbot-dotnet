AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: slack-pokerbot-dotnet

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Parameters:
  SlackToken:
    Type: String
  ImageLocation:
    Type: String

Resources:
  PokerBotTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: pokerbot
      AttributeDefinitions: 
        - AttributeName: channel
          AttributeType: S
        - AttributeName: key
          AttributeType: S
      KeySchema: 
        - AttributeName: channel
          KeyType: HASH
        - AttributeName: key
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  PokerBotTopic:
    Type: AWS::SNS::Topic
    Properties:
        TopicName: pokerbot_topic
  SlackPokerBotFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: slack-pokerbot-dotnet::slack_pokerbot_dotnet.NotificationFunction::FunctionHandler
      Runtime: dotnetcore3.1
      Events:
        RootNotification:
          Type: SNS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Topic: !Ref PokerBotTopic
      Environment:
        Variables:
          SLACK_TOKEN: !Ref SlackToken
          IMAGE_LOCATION: !Ref ImageLocation
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PokerBotTable
  SlackPokerBotApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: slack-pokerbot-dotnet::slack_pokerbot_dotnet.WebApiFunction::Post
      Runtime: dotnetcore3.1
      Events:
        RootGet:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /
            Method: POST

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiURL:
    Description: "API Gateway endpoint URL for Prod stage for Slack Poker Bot"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  SlackPokerBotApiFunction:
    Description: "Slack Poker Bot API Lambda Function ARN"
    Value: !GetAtt SlackPokerBotApiFunction.Arn
  SlackPokerBotApiFunctionIamRole:
    Description: "Implicit IAM Role created for Slack Poker Bot API function"
    Value: !GetAtt SlackPokerBotApiFunctionRole.Arn
  SlackPokerBotFunction:
    Description: "Slack Poker Bot SNS Lambda Function ARN"
    Value: !GetAtt SlackPokerBotFunction.Arn
  SlackPokerBotFunctionIamRole:
    Description: "Implicit IAM Role created for Slack Poker Bot SNS function"
    Value: !GetAtt SlackPokerBotFunctionRole.Arn
